{"version":3,"sources":["components/InlineMenu/style.module.css","components/Home/modalStyle.module.css","components/EquationRow/style.module.css","components/MatrixDisplayer/style.module.css","components/LogicRow/style.module.css","components/LogicDisplayer/style.module.css","containers/Home.js","components/RoundedButton/style.module.css","constants/InputChecks.js","components/RoundedButton/index.js","components/DropdownMenu/index.js","components/VariableRow/index.js","components/EquationRow/index.js","components/InlineMenu/index.js","components/MatrixDisplayer/index.js","components/LogicRow/index.js","components/LogicButtons/index.js","components/LogicDisplayer/index.js","components/PrintSettings/index.js","components/Home/index.js","constants/global.js","components/LogicButtons/style.module.css","components/PrintSettings/style.module.css","components/Home/style.module.css","components/VariableRow/style.module.css","actions/counter.js","reducers/counter.js","reducers/index.js","store/configureStore.dev.js","store/configureStore.prod.js","store/configureStore.js","index.js"],"names":["module","exports","http","require","killed","HomeContainer","props","resetParams","setState","parameters","disabledAddParameter","parametersMatrix","math","setLeftButtonActive","leftButtonActive","rightButtonActive","setRightButtonActive","changeNumberOfIterations","e","value","target","Number","isInteger","parseFloat","numberOfIterations","handleMethodSelection","info","key","reachability","synthesis","boxesMethod","polytopesMethod","parallelotopesMethod","includes","numVar","state","variables","length","console","log","lMatrix","nameSelectedMenu","checkAllDefined","copiedArray","parameter","allDefined","i","name","disabledAddVariable","changeName","deepCopy","id","addEquation","saveChanges","changeLowerBound","lowerBound","changeUpperBound","upperBound","addCallback","push","lMatrixExtra","indexFirstMatrixEl","indexSecondMatrixEl","newMatrix","resize","newLMatrix","newTMatrix","tMatrix","numberOfVar","filter","element","deleteCallback","splice","deleteEquation","index","equations","variableName","equation","updateEquation","updateMatrixElement","indexRow","indexColumn","updateParams","parametersModal","addRowParameterMatrix","matrixDimensions","size","numberOfRows","deleteRowParameterMatrix","alert","addRowLMatrix","deleteRowLMatrix","updateTMatrixElement","addRowTMatrix","deleteRowTMatrix","addLogicFormulaCallback","new_logicFormulas","logicFormulas","updateLogicFormulaCallback","selectionStart","selectionEnd","cursorPositionForLogicFormula","startPosition","endPosition","deleteLogicFormulaCallback","setCursorPositionForLogicFormula","injectTextInLogicFormula","txt","undefined","finalText","substring","document","getElementById","focus","updatePrintSwSettings","printSettings","drawingSw","charts","addPrintChart","newCharts","x_axis","y_axis","z_axis","deletePrintChart","updatePrintChart","createArrayOptions","array","map","item","concat","startExecuting","resultChecks","checkInput","error","errorMessagge","executing","data","JSON","stringify","options","hostname","window","location","port","process","path","method","headers","req","request","res","str","on","d","downloadFile","chartNum","get","chartData","chunk","buffer","Buffer","write","end","stopExecuting","loadConfiguration","file","files","reader","FileReader","readAsText","onload","stateFromFile","parse","result","err","saveConfiguration","exportSourceFile","chooseMethod","this","arrayOptions","Component","mathFunctions","checkEquationsCorrectness","checkVarAndParamsNames","checkBoundsVarAndParams","checkEqualNamesVarAndParameters","cheksEquationsVarAndParams","toString","elementList","forEach","strOnlyLetters","code","len","charCodeAt","variablesName","parametersName","Set","indexOf","equationArray","replace","split","subEquation","RoundedButton","onClick","callback","className","styles","button","disabled","notClickable","text","SelectorMenu","triggerSubMenuAction","mode","onSelect","title","VariableRow","rowVariable","smallFont","textInput","onChange","type","polytopes","rowContainer","pattern","step","icon","EquationRow","flexRow","flexEquation","InlineMenu","headerParameters","leftButton","active","join","leftButtonText","rightButton","rightButtonText","MatrixDisplayer","matrix","_data","itemRow","Array","isArray","itemColumn","list","matrixElement","LogicRow","LogicButtons","style","button_style","button_text","LogicDisplayer","grid_container","grid_item","titleBox","grid_container2","grid_item2","listBox","separator","buttonsList","buttonBox","textNote","createVariableSelector","checked","Fragment","select_style","BoxesPage","isPopoverOpen","container","data-tid","header","marginLeft","simplePaddingLeft","min","flexEnd","isOpen","position","padding","onClickOutside","containerClassName","menuContainer","content","nudgedLeft","nudgedTop","targetRect","popoverRect","menuElement","for","display","selectMethodContainer","mainContainer","main","center","footer","logicButton","startButton","sizeUnit","color","loading","stopButton","modalStyles","modal","modal_content","modal_header","close","modal_body","flexRowDomain","bb","Blob","a","createElement","download","href","URL","createObjectURL","click","INCREMENT_COUNTER","DECREMENT_COUNTER","increment","decrement","incrementIfOdd","dispatch","getState","counter","incrementAsync","delay","setTimeout","action","createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","rootReducer","routerMiddleware","enhancer","applyMiddleware","thunk","configureStore","initialState","createStore","configureStoreProd","store","render","Home"],"mappings":"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","file":"static/js/main.2cf5c112.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerParameters\":\"style_headerParameters__XoBMv\",\"leftButton\":\"style_leftButton__FIbAR\",\"rightButton\":\"style_rightButton__3dWjZ\",\"active\":\"style_active__2ssjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modalStyle_modal__2XKh2\",\"modal_content\":\"modalStyle_modal_content__13qzd\",\"animatetop\":\"modalStyle_animatetop__2Ixsm\",\"close\":\"modalStyle_close__1IPXW\",\"modal_header\":\"modalStyle_modal_header__3mgNK\",\"flexRow\":\"modalStyle_flexRow__cneWO\",\"modal_body\":\"modalStyle_modal_body__36T2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"style_textInput__3SsHn\",\"flexRow\":\"style_flexRow__1zXly\",\"flexEquation\":\"style_flexEquation__2TuyL\",\"equationFlex\":\"style_equationFlex__3DLW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"matrixElement\":\"style_matrixElement__2iQO6\",\"flexRow\":\"style_flexRow__1s2zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowVariable\":\"style_rowVariable__rI8uP\",\"textInput\":\"style_textInput__1Vlmm\",\"icon\":\"style_icon__2i-nY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_container\":\"style_grid_container__3rj3c\",\"grid_item\":\"style_grid_item__3Txci\",\"grid_container2\":\"style_grid_container2__3d5ly\",\"grid_item2\":\"style_grid_item2__znyBm\",\"textInput\":\"style_textInput__25JaM\",\"buttonBox\":\"style_buttonBox__z_llH\",\"button\":\"style_button__2WDuZ\",\"listBox\":\"style_listBox__1dB9e\",\"titleBox\":\"style_titleBox__3npiq\",\"text\":\"style_text____gxn\",\"textNote\":\"style_textNote__YlKVy\",\"buttonsList\":\"style_buttonsList__22QpY\"};","// @flow\nimport React, { Component } from \"react\";\nimport Home from \"../components/Home\";\nimport { deepCopy, capitalizeFirstLetter, downloadFile } from \"../constants/global\";\nimport * as math from \"mathjs\";\nimport { range } from \"rxjs\";\nimport { checkInput } from \"../constants/InputChecks\";\n\nvar http = require(\"http\");\nlet killed = false; // check if execution has been killed by user\n\n/** layout\n  equations: [\n        {variableName: \"x\", equation: \"x+x\"},\n        {variableName: \"y\", equation: \"y+z\"},\n        {variableName: \"z\", equation: \"y+z-r\"},\n        {variableName: \"t\", equation: \"y+z*z\"},\n        {variableName: \"r\", equation: \"y+z/v\"},\n        {variableName: \"v\", equation: \"(y+z)*y\"}\n      ],\n      variables: [\n        {name: \"x\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"y\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"z\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"t\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"r\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"v\", lowerBound: 10, upperBound: 30, lMatrixExtra: true},\n      ],\n      parameters: [\n        {name: \"x\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"y\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"z\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"t\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"r\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n        {name: \"v\", lowerBound: 10, upperBound: 30, lMatrixExtra: false},\n      ]\n *\n *\n */\n\nexport default class HomeContainer extends Component {\n  props;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      executing: false,\n      numberOfIterations: 1,\n      variables: [], // array of object\n      parameters: [],\n      equations: [],\n      parametersMatrix: math.zeros(1),\n      tMatrix: math.zeros(1),\n      lMatrix: math.identity(1, 1), // updated in this.handleMethodSelection()\n      logicFormulas: [\"\"],\n      cursorPositionForLogicFormula: {\n        index: 0,\n        startPosition: 0,\n        endPosition: 0\n      },\n      reachability: false, // possible use of enumeration?\n      synthesis: false,\n      boxesMethod: false,\n      polytopesMethod: false,\n      parallelotopesMethod: false,\n      leftButtonActive: true, // for the parameters type\n      rightButtonActive: false, // for the parameters type\n      disabledAddVariable: false,\n      disabledAddParameter: false,\n      // will display a combination of 'reachability/synthesis and methods'\n      nameSelectedMenu: \"Method of analysis\",\n      printSettings: {\n        // if the user want the output draw with matlab or octave\n        drawingSw: \"none\", // no print as default\n        charts: [{ x_axis: \"\", y_axis: \"\", z_axis: \"\" }] // { x_axis: \"\", y_axis: \"\", z_axis: \"\"}\n      }\n    };\n  }\n\n  resetParams = () => {\n    this.setState({\n      parameters: [],\n      disabledAddParameter: false,\n      parametersMatrix: math.zeros(1)\n    });\n  };\n\n  // the left button for the parameters: boxes\n  setLeftButtonActive = () => {\n    this.resetParams();\n\n    this.setState({\n      leftButtonActive: true,\n      rightButtonActive: false\n    });\n  };\n\n  // the right button for the parameters: polytopes\n  setRightButtonActive = () => {\n    this.resetParams();\n\n    this.setState({\n      leftButtonActive: false,\n      rightButtonActive: true\n    });\n  };\n\n  changeNumberOfIterations = e => {\n    const value = e.target.value;\n\n    if (value > 0 && Number.isInteger(parseFloat(value, 10)) === true) {\n      // parseInt is not used because does an automatic truncate and returns always an int\n      this.setState({ numberOfIterations: value });\n    } else {\n      this.setState({ numberOfIterations: 1 });\n    }\n  };\n\n  // it's not called when there is a load configuration, the menù name and state are already set.\n  handleMethodSelection = info => {\n    let { key } = info; // extract only the key value\n\n    // clean the state\n    this.setState({\n      reachability: false,\n      synthesis: false,\n      boxesMethod: false,\n      polytopesMethod: false,\n      parallelotopesMethod: false\n    });\n\n    // assumes that there is only reachability and synthesis\n    if (key.includes(\"reachability\")) {\n      this.setState({ reachability: true });\n    } else {\n      this.setState({ synthesis: true });\n    }\n\n    if (key.includes(\"boxes\")) {\n      let numVar = this.state.variables.length;\n      numVar = numVar == 0 ? 1 : numVar;\n      console.log(\"numVar \" + numVar);\n\n      this.setState({\n        lMatrix: math.identity(numVar, numVar),\n        boxesMethod: true\n      });\n    } else if (key.includes(\"polytopes\")) {\n      this.setState({ polytopesMethod: true });\n    } else if (key.includes(\"parallelotopes\")) {\n      this.setState({ parallelotopesMethod: true });\n    }\n    // write the menu name\n    this.setState({ nameSelectedMenu: key });\n  };\n\n  // save the array at every changes, array contains variables or parameters of the system\n  saveChanges(copiedArray, parameter) {\n    console.log(this.state.lMatrix);\n\n    if (parameter) {\n      this.setState({\n        parameters: copiedArray\n      });\n    } else {\n      this.setState({\n        variables: copiedArray\n      });\n    }\n  }\n\n  // prevent the insertion of variables or paramenters if the previous ones aren't defined\n  checkAllDefined = (copiedArray, parameter) => {\n    let allDefined = true;\n\n    for (let i = 0; i < copiedArray.length; i++) {\n      let element = copiedArray[i];\n\n      if (element.name == \"\") {\n        allDefined = false;\n        break;\n      }\n    }\n\n    if (allDefined === true) {\n      if (parameter) {\n        this.setState({\n          disabledAddParameter: false\n        });\n      } else {\n        this.setState({\n          disabledAddVariable: false\n        });\n      }\n    }\n  };\n\n  // ------------- VARIABLE STUFF ----------------------\n\n  changeName = (e, parameter) => {\n    let copiedArray = deepCopy(\n      parameter ? this.state.parameters : this.state.variables\n    );\n\n    let obj = copiedArray[e.target.id];\n    obj.name = e.target.value;\n\n    if (e.target.value == \"\") {\n      if (parameter) {\n        this.setState({\n          disabledAddParameter: true\n        });\n      } else {\n        this.setState({\n          disabledAddVariable: true\n        });\n      }\n    } else {\n      this.checkAllDefined(copiedArray, parameter);\n    }\n\n    if (e.target.value != \"\" && !parameter) {\n      this.addEquation(e.target.id, e.target.value);\n    }\n\n    this.saveChanges(copiedArray, parameter);\n  };\n\n  changeLowerBound = (e, parameter) => {\n    let copiedArray = deepCopy(\n      parameter ? this.state.parameters : this.state.variables\n    );\n    let obj = copiedArray[e.target.id];\n    obj.lowerBound = parseFloat(e.target.value);\n\n    this.saveChanges(copiedArray, parameter);\n  };\n\n  changeUpperBound = (e, parameter) => {\n    let copiedArray = deepCopy(\n      parameter ? this.state.parameters : this.state.variables\n    );\n    let obj = copiedArray[e.target.id];\n    obj.upperBound = parseFloat(e.target.value);\n\n    this.saveChanges(copiedArray, parameter);\n  };\n\n  // callback to add a variable or a parameter, modifying the rispective matrix\n  addCallback = parameter => {\n    let copiedArray = deepCopy(\n      parameter ? this.state.parameters : this.state.variables\n    );\n    copiedArray.push({\n      name: \"\",\n      lowerBound: 0,\n      upperBound: 0,\n      lMatrixExtra: false\n    });\n\n    if (parameter) {\n      const indexFirstMatrixEl = (copiedArray.length - 1) * 2;\n      const indexSecondMatrixEl = indexFirstMatrixEl + 1;\n\n      let newMatrix = this.state.parametersMatrix.resize([\n        copiedArray.length * 2,\n        copiedArray.length + 1\n      ]);\n\n      newMatrix = math.subset(\n        newMatrix,\n        math.index(indexFirstMatrixEl, copiedArray.length - 1),\n        1\n      );\n      newMatrix = math.subset(\n        newMatrix,\n        math.index(indexSecondMatrixEl, copiedArray.length - 1),\n        -1\n      );\n\n      this.setState({\n        parametersMatrix: newMatrix,\n        disabledAddParameter: true\n      });\n    } else {\n      let newLMatrix = this.state.lMatrix;\n      let newTMatrix = this.state.tMatrix;\n\n      let numberOfVar = copiedArray.filter(element => {\n        return !element.lMatrixExtra;\n      }).length;\n\n      newLMatrix = math.identity(copiedArray.length, numberOfVar);\n      newTMatrix = this.state.tMatrix.resize([1, numberOfVar]);\n      newTMatrix = math.subset(\n        newTMatrix,\n        math.index(0, numberOfVar - 1),\n        numberOfVar - 1\n      );\n\n      this.setState({\n        lMatrix: newLMatrix,\n        tMatrix: newTMatrix,\n        disabledAddVariable: true\n      });\n    }\n    this.saveChanges(copiedArray, parameter);\n  };\n\n  // callback for removing a variable or a parameter, modifying the rispective matrix\n  deleteCallback = (e, parameter) => {\n    let copiedArray = deepCopy(\n      parameter ? this.state.parameters : this.state.variables\n    );\n\n    let name = copiedArray[e.target.id].name;\n    copiedArray.splice(e.target.id, 1);\n\n    this.checkAllDefined(copiedArray, parameter);\n\n    if (!parameter) {\n      let numberOfVar = copiedArray.filter(element => {\n        return !element.lMatrixExtra;\n      }).length;\n\n      let newLMatrix;\n      let newTMatrix;\n\n      if (numberOfVar != 0) {\n        newLMatrix = this.state.lMatrix.resize([\n          copiedArray.length,\n          numberOfVar\n        ]);\n        newTMatrix = this.state.tMatrix.resize([1, numberOfVar]);\n      } else {\n        newLMatrix = math.identity(1, 1);\n        newTMatrix = math.zeros(1);\n      }\n\n      this.setState({\n        lMatrix: newLMatrix,\n        tMatrix: newTMatrix\n      });\n\n      if (name != \"\") {\n        this.deleteEquation(e.target.id);\n      }\n    } else {\n      let newMatrix =\n        copiedArray.length != 0\n          ? this.state.parametersMatrix.resize([\n              copiedArray.length * 2,\n              copiedArray.length + 1\n            ])\n          : math.zeros(1);\n\n      this.setState({\n        parametersMatrix: newMatrix\n      });\n    }\n\n    this.saveChanges(copiedArray, parameter);\n  };\n\n  // ------------- EQUATION STUFF ----------------------\n\n  deleteEquation = index => {\n    let equations = deepCopy(this.state.equations);\n\n    equations.splice(index, 1);\n\n    this.setState({\n      equations: equations\n    });\n  };\n\n  addEquation = (index, variableName) => {\n    let equations = deepCopy(this.state.equations);\n\n    if (index <= equations.length - 1) {\n      let obj = equations[index];\n      obj.variableName = variableName;\n    } else {\n      equations.push({ variableName: variableName, equation: \"\" });\n    }\n\n    this.setState({\n      equations: equations\n    });\n  };\n\n  updateEquation = e => {\n    let equations = deepCopy(this.state.equations);\n    let obj = equations[e.target.id];\n    obj.equation = e.target.value;\n\n    this.setState({\n      equations: equations\n    });\n  };\n\n  // ------------- MATRIX STUFF ----------------------\n\n  updateMatrixElement = (\n    e,\n    indexRow,\n    indexColumn,\n    updateParams,\n    parametersModal\n  ) => {\n    if (parametersModal) {\n      let newMatrix = math.subset(\n        this.state.parametersMatrix,\n        math.index(indexRow, indexColumn),\n        parseFloat(e.target.value)\n      );\n\n      let parameters = this.state.parameters;\n\n      if (updateParams && indexRow < this.state.parameters.length * 2) {\n        if (indexRow % 2 == 0) {\n          parameters[math.floor(indexRow / 2)].lowerBound = e.target.value;\n        } else {\n          parameters[math.floor(indexRow / 2)].upperBound = e.target.value;\n        }\n      }\n\n      this.setState({\n        parameters: parameters,\n        parametersMatrix: newMatrix\n      });\n    } else {\n      let newMatrix = math.subset(\n        this.state.lMatrix,\n        math.index(indexRow, indexColumn),\n        parseFloat(e.target.value)\n      );\n\n      this.setState({\n        lMatrix: newMatrix\n      });\n    }\n  };\n\n  addRowParameterMatrix = () => {\n    let newMatrix = this.state.parametersMatrix;\n    let matrixDimensions = newMatrix.size();\n    let numberOfRows = matrixDimensions[0];\n    matrixDimensions[0] = numberOfRows + 1;\n    newMatrix.resize(matrixDimensions);\n\n    this.setState({\n      parametersMatrix: newMatrix\n    });\n  };\n\n  deleteRowParameterMatrix = () => {\n    let newMatrix = this.state.parametersMatrix;\n    let matrixDimensions = newMatrix.size();\n    let numberOfRows = matrixDimensions[0];\n\n    if (numberOfRows > this.state.parameters.length * 2) {\n      matrixDimensions[0] = numberOfRows - 1;\n      newMatrix.resize(matrixDimensions);\n\n      this.setState({\n        parametersMatrix: newMatrix\n      });\n    } else {\n      alert(\n        \"Can't delete row because otherwise the matrix would have less than 2*number of parameters rows\"\n      );\n    }\n  };\n\n  addRowLMatrix = () => {\n    let newMatrix = this.state.lMatrix;\n    let matrixDimensions = newMatrix.size();\n    let numberOfRows = matrixDimensions[0];\n    matrixDimensions[0] = numberOfRows + 1;\n    newMatrix.resize(matrixDimensions);\n\n    let copiedArray = deepCopy(this.state.variables);\n    copiedArray.push({\n      name: copiedArray.length + 1,\n      lowerBound: 0,\n      upperBound: 0,\n      lMatrixExtra: true\n    });\n\n    this.setState({\n      variables: copiedArray,\n      lMatrix: newMatrix\n    });\n  };\n\n  deleteRowLMatrix = () => {\n    let newMatrix = this.state.lMatrix;\n    let matrixDimensions = newMatrix.size();\n    let numberOfRows = matrixDimensions[0];\n\n    let numberOfVar = this.state.variables.filter(element => {\n      return !element.lMatrixExtra;\n    }).length;\n\n    if (numberOfRows > numberOfVar) {\n      matrixDimensions[0] = numberOfRows - 1;\n      newMatrix.resize(matrixDimensions);\n      let copiedArray = deepCopy(this.state.variables);\n      copiedArray.splice(copiedArray.length - 1, 1);\n\n      this.setState({\n        variables: copiedArray,\n        lMatrix: newMatrix\n      });\n    } else {\n      alert(\n        \"Can't delete row because otherwise the matrix would have less rows than the number of variables\"\n      );\n    }\n  };\n\n  updateTMatrixElement = (e, indexRow, indexColumn) => {\n    if (e.target.value < this.state.variables.length) {\n      let newMatrix = math.subset(\n        this.state.tMatrix,\n        math.index(indexRow, indexColumn),\n        parseFloat(e.target.value)\n      );\n\n      this.setState({\n        tMatrix: newMatrix\n      });\n    } else {\n      alert(\n        \"Can't insert this value because it's greater than the number of rows of the L matrix\"\n      );\n    }\n  };\n\n  addRowTMatrix = () => {\n    let newMatrix = this.state.tMatrix;\n    let matrixDimensions = newMatrix.size();\n    let numberOfRows = matrixDimensions[0];\n    matrixDimensions[0] = numberOfRows + 1;\n    newMatrix.resize(matrixDimensions);\n\n    this.setState({\n      tMatrix: newMatrix\n    });\n  };\n\n  deleteRowTMatrix = () => {\n    let newMatrix = this.state.tMatrix;\n    let matrixDimensions = newMatrix.size();\n    let numberOfRows = matrixDimensions[0];\n\n    if (numberOfRows != 1) {\n      matrixDimensions[0] = numberOfRows - 1;\n      newMatrix.resize(matrixDimensions);\n\n      this.setState({\n        tMatrix: newMatrix\n      });\n    } else {\n      alert(\"Can't delete row because otherwise the matrix would be empty\");\n    }\n  };\n\n  // ------------- LOGICS STUFF ----------------------\n\n  addLogicFormulaCallback = () => {\n    let new_logicFormulas = this.state.logicFormulas;\n    new_logicFormulas.push(\"\");\n    this.setState({\n      logicFormulas: new_logicFormulas\n    });\n  };\n\n  // write the inserted value of the formula in the react state\n  // update the cursor position of the selected logic formulas\n  updateLogicFormulaCallback = (index, e) => {\n    console.log(\n      \"update logic formula. pos \" +\n        e.target.selectionStart +\n        \" \" +\n        e.target.selectionEnd\n    );\n    let new_logicFormulas = this.state.logicFormulas;\n    new_logicFormulas[index] = e.target.value;\n\n    this.setState({\n      logicFormulas: new_logicFormulas,\n      cursorPositionForLogicFormula: {\n        index: index,\n        startPosition: e.target.selectionStart,\n        endPosition: e.target.selectionEnd\n      }\n    });\n  };\n\n  deleteLogicFormulaCallback = id => {\n    let new_logicFormulas = this.state.logicFormulas;\n    new_logicFormulas.splice(id, 1);\n    this.setState({\n      cursorPositionForLogicFormula: {},\n      logicFormulas: new_logicFormulas\n    });\n  };\n\n  setCursorPositionForLogicFormula = (index, e) => {\n    console.log(\n      \"set pos \" + e.target.selectionStart + \" \" + e.target.selectionEnd\n    );\n    this.setState({\n      cursorPositionForLogicFormula: {\n        index: index,\n        startPosition: e.target.selectionStart,\n        endPosition: e.target.selectionEnd\n      }\n    });\n  };\n\n  // used by the buttons\n  injectTextInLogicFormula = txt => {\n    let index = this.state.cursorPositionForLogicFormula.index;\n    let startPosition = this.state.cursorPositionForLogicFormula.startPosition;\n    let endPosition = this.state.cursorPositionForLogicFormula.endPosition;\n\n    //this check is for preventing the case when the user select a row, delete it and then press a button\n    if (this.state.logicFormulas[index] !== undefined) {\n      let textBeforeStartPosition = this.state.logicFormulas[index].substring(\n        0,\n        startPosition\n      );\n      let textAfterEndPosition = this.state.logicFormulas[index].substring(\n        endPosition\n      );\n      let finalText = textBeforeStartPosition + txt + textAfterEndPosition;\n      let new_logicFormulas = this.state.logicFormulas;\n      new_logicFormulas[index] = finalText;\n\n      this.setState({\n        logicFormulas: new_logicFormulas,\n        cursorPositionForLogicFormula: {\n          index: index,\n          startPosition: startPosition + txt.length,\n          endPosition: startPosition + txt.length\n        }\n      });\n\n      // refocus on the input form\n      document\n        .getElementById(\n          \"Logic\" + this.state.cursorPositionForLogicFormula.index\n        )\n        .focus();\n    }\n  };\n\n  // ------------- PRINT SETTINGS --------------------\n\n  updatePrintSwSettings = e => {\n    console.log(e.target.value);\n    // overwrite the choice\n    this.setState({\n      printSettings: {\n        drawingSw: e.target.value,\n        charts: this.state.printSettings.charts\n      }\n    });\n  };\n\n  addPrintChart = () => {\n    let newCharts = this.state.printSettings.charts;\n    newCharts.push({\n      x_axis: \"\",\n      y_axis: \"\",\n      z_axis: \"\"\n    });\n\n    this.setState({\n      printSettings: {\n        drawingSw: this.state.printSettings.drawingSw,\n        charts: newCharts\n      }\n    });\n  };\n\n  deletePrintChart = index => {\n    let newCharts = this.state.printSettings.charts;\n    newCharts.splice(index, 1);\n    this.setState({\n      printSettings: {\n        drawingSw: this.state.printSettings.drawingSw,\n        charts: newCharts\n      }\n    });\n  };\n\n  updatePrintChart = e => {\n    //console.log(e.target);\n\n    let newCharts = this.state.printSettings.charts;\n    let id = e.target.id;\n    let name = e.target.name; // name of the axis\n    let value = e.target.value; // name of the variable\n    newCharts[id][name] = value;\n\n    console.log(newCharts);\n\n    this.setState(\n      {\n        printSettings: {\n          drawingSw: this.state.printSettings.drawingSw,\n          charts: newCharts\n        }\n      },\n      () => console.log(this.state.printSettings)\n    );\n  };\n\n  createArrayOptions = () => {\n    // if reachability it's possible to draw only variables\n    // if synthesis it's possible to draw variables and parameters\n    let array;\n\n    if (this.state.reachability === true) {\n      array = this.state.variables.map(item => {\n        return item.name;\n      });\n    } else if (this.state.synthesis === true) {\n      array = this.state.variables.concat(this.state.parameters);\n      array = array.map(item => {\n        return item.name;\n      });\n    }\n\n    return array;\n  };\n\n  // ------------- BUTTON STUFF ----------------------\n\n  startExecuting = () => {\n    let resultChecks = checkInput(\n      this.state.variables,\n      this.state.parameters,\n      this.state.equations\n    );\n\n    if (resultChecks.error) {\n      alert(resultChecks.errorMessagge);\n    } else {\n      if (this.state.executing) {\n        alert(\"process already in execution\");\n      } else {\n        this.setState(\n          { executing: true },\n          () => {\n\n            let data = JSON.stringify(this.state);\n            const options = {\n              hostname: window.location.hostname,\n              port: process.env.REACT_APP_SERVER_PORT,\n              path: '/prova',\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Content-Length': data.length\n              }\n            }\n\n            const req = http.request(options, (res) => {\n              let str = '';\n\n              res.on('data', (d) => {\n                str += d;\n              });\n\n              res.on('end', () => {\n                if (! killed)\n                {\n                  downloadFile(str, \"result.txt\", \"text/plain\");\n                  this.setState({ executing: false });\n                }\n                killed = false;\n\n                const chartNum = this.state.printSettings.charts.filter(item => {\n                  return item.x_axis !== \"\" && item.y_axis !== \"\"; // allow z=\"\" for 2D graph\n                }).length\n\n                // download charts\n                if (this.state.printSettings.drawingSw !== \"none\" && chartNum > 0)\n                {\n                  http.get(\"/chart\", (res) => {\n                      let chartData = [];\n                      res.on('data', (chunk) => chartData.push(chunk) );\n                      res.on('end', () => {\n                        var buffer = Buffer.concat(chartData);\n                        downloadFile(buffer, \"AutoGenerated.zip\", \"application/zip\");\n                      });\n                  });\n                }\n              });\n            }).on('error', (error) => {\n              console.error(error)\n            });\n            req.write(data);\n            req.end();\n          } // end of the inline function\n        ); // end of setState\n      } // end of else for error in the state input\n    }\n  };\n\n  stopExecuting = () => {\n    killed = true;\n    http.get(\"/kill\", (req, res) => {\n      this.setState({ executing: false });\n    });\n  };\n\n  loadConfiguration = (id) => {\n    let file = document.getElementById(id).files[0];\n    if (file)\n    {\n      let reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = (e) => {\n        try\n        {\n          let stateFromFile = JSON.parse(e.target.result);\n          this.setState(\n            {\n              ...stateFromFile,\n              lMatrix: math.matrix(stateFromFile.lMatrix.data),\n              tMatrix: math.matrix(stateFromFile.tMatrix.data),\n              parametersMatrix: math.matrix(\n                stateFromFile.parametersMatrix.data\n              )\n            },\n            () => {\n              console.log(this.state);\n            }\n          );\n        }\n        catch (err)\n        {\n          alert(\"Error parsing JSON string:\", err);\n        }\n      };\n    }\n  };\n\n  saveConfiguration = () => {\n    downloadFile(JSON.stringify(this.state), \"config.json\", \"application/json\");\n  };\n\n  exportSourceFile = () => {\n    // get header file\n    http.get(\"/saveH\", (res) => {\n      let data = '';\n      res.on('data', (chunk) => data += chunk );\n      res.on('end', () => {\n        downloadFile(data, \"AutoGenerated.h\", \"text/x-h\");\n      });\n    });\n\n    // get cpp file (through POST request)\n    const data = JSON.stringify(this.state);\n    const options = {\n      hostname: window.location.hostname,\n      port: process.env.REACT_APP_SERVER_PORT,\n      path: '/saveC',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Content-Length': data.length\n      }\n    }\n\n    const req = http.request(options, (res) => {\n      let str = '';\n      res.on('data', (d) => {\n        str += d;\n      });\n\n      res.on('end', () => {\n        downloadFile(str, \"AutoGenerated.cpp\", \"text/x-c\");\n      });\n    }).on('error', (error) => {\n      console.error(error)\n    });\n    req.write(data);\n    req.end();\n  };\n\n  chooseMethod = () => {\n    alert(\"choose\");\n  };\n  render() {\n    return (\n      <Home\n        changeNumberOfIterations={this.changeNumberOfIterations}\n        numberOfIterations={this.state.numberOfIterations}\n        handleMethodSelection={this.handleMethodSelection}\n        nameSelectedMenu={this.state.nameSelectedMenu}\n        //\n        reachability={this.state.reachability}\n        synthesis={this.state.synthesis}\n        boxesMethod={this.state.boxesMethod}\n        polytopesMethod={this.state.polytopesMethod}\n        parallelotopesMethod={this.state.parallelotopesMethod}\n        variables={this.state.variables}\n        parameters={this.state.parameters}\n        //\n        addCallback={this.addCallback}\n        deleteCallback={this.deleteCallback}\n        changeName={this.changeName}\n        changeLowerBound={this.changeLowerBound}\n        changeUpperBound={this.changeUpperBound}\n        equations={this.state.equations}\n        updateEquation={this.updateEquation}\n        parametersMatrix={this.state.parametersMatrix}\n        updateMatrixElement={this.updateMatrixElement}\n        //\n        logicFormulas={this.state.logicFormulas}\n        addLogicFormulaCallback={this.addLogicFormulaCallback}\n        updateLogicFormulaCallback={this.updateLogicFormulaCallback}\n        deleteLogicFormulaCallback={this.deleteLogicFormulaCallback}\n        setCursorPositionForLogicFormula={this.setCursorPositionForLogicFormula}\n        injectTextInLogicFormula={this.injectTextInLogicFormula}\n        //\n        executing={this.state.executing}\n        startExecuting={this.startExecuting}\n        stopExecuting={this.stopExecuting}\n        //\n        leftButtonActive={this.state.leftButtonActive}\n        rightButtonActive={this.state.rightButtonActive}\n        setLeftButtonActive={this.setLeftButtonActive}\n        setRightButtonActive={this.setRightButtonActive}\n        disabledAddVariable={this.state.disabledAddVariable}\n        disabledAddParameter={this.state.disabledAddParameter}\n        //\n        loadConfiguration={this.loadConfiguration}\n        saveConfiguration={this.saveConfiguration}\n        exportSourceFile={this.exportSourceFile}\n        chooseMethod={this.chooseMethod}\n        //\n        addRowParameterMatrix={this.addRowParameterMatrix}\n        deleteRowParameterMatrix={this.deleteRowParameterMatrix}\n        lMatrix={this.state.lMatrix}\n        addRowLMatrix={this.addRowLMatrix}\n        deleteRowLMatrix={this.deleteRowLMatrix}\n        //\n        printSettings={this.state.printSettings}\n        updatePrintSwSettings={this.updatePrintSwSettings}\n        addPrintChart={this.addPrintChart}\n        deletePrintChart={this.deletePrintChart}\n        updatePrintChart={this.updatePrintChart}\n        arrayOptions={this.createArrayOptions()}\n        //\n        tMatrix={this.state.tMatrix}\n        updateTMatrixElement={this.updateTMatrixElement}\n        addRowTMatrix={this.addRowTMatrix}\n        deleteRowTMatrix={this.deleteRowTMatrix}\n      />\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__24Em3\"};","import * as math from \"mathjs\";\n\n//check if each equation respects constraints\n// constraints:\n// 1) no trigonometric functions\n// 2) no exponential functions\n// 3) no logarithmic functions\n// 4) radix with no elevated parameters\n// 5) variables and paramaters cannot appear in a grade superior than the first\n\nconst mathFunctions = [\n  \"sin\",\n  \"sen\",\n  \"cos\",\n  \"tan\",\n  \"tg\",\n  \"ctg\",\n  \"cot\",\n  \"sec\",\n  \"csc\",\n  \"cosec\",\n  \"sqrt\",\n  \"log\",\n  \"ln\",\n  \"e\",\n  \"^\"\n];\n\n/**\n * @param variables: JSON object containing all the info's about the variables defined by the user\n * @param parameters: JSON object containing all the info's about the parameters defined by the user\n * @param equations: JSON object containing all the info's about the equations defined by the user\n */\nexport const checkInput = (variables, parameters, equations) => {\n  let result = {\n    error: false,\n    errorMessagge: \"\"\n  };\n\n  checkEquationsCorrectness(equations, result);\n  if (result.error) {\n    return result;\n  }\n\n  checkVarAndParamsNames(variables, result);\n  if (result.error) {\n    return result;\n  }\n  checkVarAndParamsNames(parameters, result);\n  if (result.error) {\n    return result;\n  }\n\n  checkBoundsVarAndParams(variables, result);\n  if (result.error) {\n    return result;\n  }\n  checkBoundsVarAndParams(parameters, result);\n  if (result.error) {\n    return result;\n  }\n\n  checkEqualNamesVarAndParameters(variables, parameters, result);\n  if (result.error) {\n    return result;\n  }\n\n  cheksEquationsVarAndParams(variables, parameters, equations, result);\n\n  return result;\n};\n\n/**\n * @param equations: JSON object containing all the info's about the equations defined by the user\n * @param result: JSON object containing the info to return in case of error to the main file\n */\nconst checkEquationsCorrectness = (equations, result) => {\n  let parsedEquation;\n  equations.map((item, index) => {\n    try {\n      parsedEquation = math.parse(item.equation);\n    } catch (math) {\n      result.errorMessagge =\n        math.toString() + \" in equation for variable \" + item.variableName;\n      result.error = true;\n    }\n  });\n};\n\n/**\n * @param elementList: JSON object containing all the info's about the variables/parameters defined by the user\n * @param result: JSON object containing the info to return in case of error to the main file\n */\nconst checkVarAndParamsNames = (elementList, result) => {\n  elementList.forEach(element => {\n    if (\n      (!strOnlyLetters(element.name) && !element.lMatrixExtra) ||\n      element.name == \"\"\n    ) {\n      result.error = true;\n      result.errorMessagge =\n        \"Illegal name for variable/parameter \" +\n        element.name +\n        \" (name can't be empty, can't contain a number and can't contain non alphanumerical simbols)\";\n    }\n  });\n};\n\n/**\n * @param str: string that needs to be checked to contain only letters from the ranges [a-z] or [A-z]\n */\nconst strOnlyLetters = str => {\n  var code, i, len;\n\n  for (i = 0, len = str.length; i < len; i++) {\n    code = str.charCodeAt(i);\n    if (\n      !(code > 64 && code < 91) && // upper alpha (A-Z)\n      !(code > 96 && code < 123) // lower alpha (a-z)\n    ) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @param elementList: JSON object containing all the info's about the variables/parameters defined by the user\n * @param result: JSON object containing the info to return in case of error to the main file\n */\nconst checkBoundsVarAndParams = (elementList, result) => {\n  elementList.forEach(element => {\n    if (element.lowerBound > element.upperBound) {\n      result.error = true;\n      result.errorMessagge =\n        \"The lower bound of the domain of variable/parameter \" +\n        element.name +\n        \" is higher of the upper bound\";\n    }\n  });\n};\n\n/**\n * @param variables: JSON object containing all the info's about the variables defined by the user\n * @param parameters: JSON object containing all the info's about the parameters defined by the user\n * @param result: JSON object containing the info to return in case of error to the main file\n */\nconst checkEqualNamesVarAndParameters = (variables, parameters, result) => {\n  let variablesName = [];\n  let parametersName = [];\n\n  variables.forEach(element => {\n    variablesName.push(element.name);\n  });\n\n  parameters.forEach(element => {\n    parametersName.push(element.name);\n  });\n\n  //checks if there are duplicates in the same array\n  if (new Set(variablesName).size !== variablesName.length) {\n    result.error = true;\n    result.errorMessagge = \"Duplicated name in variables\";\n  } else {\n    //checks if there are duplicates in the same array\n    if (new Set(parametersName).size !== parametersName.length) {\n      result.error = true;\n      result.errorMessagge = \"Duplicated name in parameters\";\n    } else {\n      for (let index = 0; index < variablesName.length; index++) {\n        const element = variablesName[index];\n        if (parametersName.indexOf(element) != -1) {\n          result.error = true;\n          result.errorMessagge =\n            \"Name \" +\n            element +\n            \" can't be used both for parameters and variables\";\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param variables: JSON object containing all the info's about the variables defined by the user\n * @param parameters: JSON object containing all the info's about the parameters defined by the user\n * @param equations: JSON object containing all the info's about the equations defined by the user\n * @param result: JSON object containing the info to return in case of error to the main file\n */\nconst cheksEquationsVarAndParams = (\n  variables,\n  parameters,\n  equations,\n  result\n) => {\n  let variablesName = [];\n  let parametersName = [];\n\n  variables.forEach(element => {\n    variablesName.push(element.name);\n  });\n\n  parameters.forEach(element => {\n    parametersName.push(element.name);\n  });\n\n  let parsedEquation;\n\n  equations.forEach(element => {\n    let equation = element.equation;\n\n    if (equation == \"\") {\n      result.error = true;\n      result.errorMessagge =\n        \"Equation for variable \" + element.variableName + \" is empty\";\n    } else {\n      let cleanedEquation = equation.replace(/[^A-Z]+/gi, \" \");\n      let equationArray = cleanedEquation.split(\" \");\n\n      for (let index = 0; index < equationArray.length; index++) {\n        const subEquation = equationArray[index];\n        if (subEquation != \"\") {\n          if (\n            variablesName.indexOf(subEquation) == -1 &&\n            parametersName.indexOf(subEquation) == -1\n          ) {\n            result.error = true;\n            if (mathFunctions.indexOf(subEquation) == -1) {\n              result.errorMessagge =\n                subEquation +\n                \" in equation for variable/parameter \" +\n                element.variableName +\n                \" is undefined and can't be used\";\n            } else {\n              if (subEquation == \"sqrt\") {\n                //future checks on sqrt still to be implemented\n                parsedEquation = math.parse(equation);\n              } else {\n                result.errorMessagge =\n                  subEquation +\n                  \" function in equation for variable \" +\n                  element.variableName +\n                  \" can't be used\";\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n};\n","// @flow\nimport React, { Component } from \"react\";\nimport styles from \"./style.module.css\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {};\n\n/**\n * @param callback: function executed on button click\n * @param text: text to display inside the button\n * @param parameter: true|false value to distinguish between variables and parameters\n * @param notClickable: true|false value to enable|disable button\n */\n\nexport default class RoundedButton extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <button\n        onClick={() => this.props?.callback?.(this.props?.parameter)}\n        className={styles.button}\n        disabled={this.props.notClickable}\n      >\n        <p>{this.props.text}</p>\n      </button>\n    );\n  }\n}\n","/* eslint no-console:0 */\nimport React, { Component } from \"react\";\nimport Menu, { SubMenu, MenuItem, Divider } from \"rc-menu\";\n\nconst reachability = \"reachability\";\nconst synthesis = \"synthesis\";\nconst boxes = \"boxes\";\nconst polytopes = \"polytopes\";\nconst parallelotopes = \"parallelotopes\";\n\nexport default class SelectorMenu extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // menu without a name\n  // key values of the menu item are String\n  render() {\n    const { triggerSubMenuAction } = this.props;\n    return (\n      <Menu\n        mode=\"vertical\"\n        onSelect={this.props.handleMethodSelection}\n        triggerSubMenuAction={triggerSubMenuAction}\n      >\n        <SubMenu title={this.props.nameSelectedMenu}>\n          <SubMenu title={reachability} key={reachability}>\n            <MenuItem key={reachability + \" \" + boxes}>{boxes}</MenuItem>\n\n            <MenuItem key={reachability + \" \" + parallelotopes}>\n              {parallelotopes}\n            </MenuItem>\n\n            <MenuItem key={reachability + \" \" + polytopes}>\n              {polytopes}\n            </MenuItem>\n          </SubMenu>\n          <Divider />\n\n          <SubMenu title={synthesis} key={synthesis}>\n            <MenuItem key={synthesis + \" \" + parallelotopes /*polytopes?*/}>\n              {\" \"}\n              {parallelotopes}{\" \"}\n            </MenuItem>\n          </SubMenu>\n        </SubMenu>\n      </Menu>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from \"react\";\nimport styles from \"./style.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { MdClose } from \"react-icons/md\";\n\ntype Props = {};\n\n/**\n * @param name: name of the variable/parameter\n * @param changeName: callback to change the variable/parameter name\n * @param lowerBound: lower bound of the variable/parameter\n * @param changeLowerBound: callback to change the lower bound of the variable/parameter\n * @param upperBound: upper bound of the variable/parameter\n * @param changeUpperBound: callback to change the upper bound of the variable/parameter\n * @param index: index of the variable/parameter in the JSON array\n * @param polytopes: true|false value used in the parameters box to decide method\n * @param parameter: true|false value to distinguish between variables and parameters\n * @param deleteCallback: callback to delete variable/parameter\n * @param boxesMethod:  true|false value used to distinguish method\n * @param polytopesMethod: true|false value used to distinguish method\n * @param parallelotopesMethod: true|false value used to distinguish method\n * @param lMatrixExtra: true|false value to identify variables that are extra added from the lMatrix modal\n */\n\nexport default class VariableRow extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <div>\n        {!this.props.lMatrixExtra && (\n          <div className={styles.rowVariable}>\n            <p className={styles.smallFont}>NAME</p>\n            <input\n              className={styles.textInput}\n              value={this.props.name}\n              onChange={e => this.props.changeName(e, this.props.parameter)}\n              type=\"text\"\n              id={this.props.index}\n            />\n            {this.props.boxesMethod && !this.props.parameter && (\n              <p>INITIAL OFFSET</p>\n            )}\n            {(this.props.parallelotopesMethod || this.props.polytopesMethod) &&\n              !this.props.parameter && (\n                <p>DOMAIN DECLARATION INSIDE MODIFY L MATRIX MODAL</p>\n              )}\n            {!this.props.polytopes && this.props.parameter && (\n              <p>INITIAL OFFSET</p>\n            )}\n            {this.props.polytopes && this.props.parameter && (\n              <p>INITIAL DOMAIN</p>\n            )}\n\n            {((!this.props.polytopesMethod &&\n              !this.props.parallelotopesMethod) ||\n              this.props.parameter) && (\n              <div className={styles.rowContainer}>\n                <input\n                  className={styles.textInput}\n                  value={this.props.lowerBound}\n                  onChange={e =>\n                    this.props.changeLowerBound(e, this.props.parameter)\n                  }\n                  type=\"number\"\n                  id={this.props.index}\n                  pattern=\"[0-9]+([\\.,][0-9]+)?\"\n                  step=\"0.0001\"\n                />\n                <p> - </p>\n                <input\n                  className={styles.textInput}\n                  value={this.props.upperBound}\n                  onChange={e =>\n                    this.props.changeUpperBound(e, this.props.parameter)\n                  }\n                  type=\"number\"\n                  id={this.props.index}\n                  pattern=\"[0-9]+([\\.,][0-9]+)?\"\n                  step=\"0.0001\"\n                />\n              </div>\n            )}\n\n            <MdClose\n              size={20}\n              className={styles.icon}\n              id={this.props.index}\n              onClick={e => this.props.deleteCallback(e, this.props.parameter)}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport styles from './style.module.css';\nimport { Link } from 'react-router-dom';\n\ntype Props = {};\n\n/**\n * @param variableName: name of the variable\n * @param equation: equation to display\n * @param updateEquation: callback to update the equation value\n * @param index: index of the equation in the JSON array\n */\n\nexport default class EquationRow extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <div className={styles.flexRow}>\n        <p className={styles.flexEquation}>{this.props.variableName}(k+1)&nbsp;=</p>\n        <input className={styles.textInput} type=\"text\" value={this.props.equation} onChange={this.props.updateEquation} id={this.props.index}/>\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport styles from './style.module.css';\nimport { Link } from 'react-router-dom';\n\ntype Props = {};\n\n/**\n * @param leftButtonText: text to display on the left button\n * @param rightButtonText: text to display on the right button\n * @param leftButtonActive: true|false value if the button is active or not\n * @param rightButtonActive: true|false value if the button is active or not\n * @param setLeftButtonActive: callback to activate the button\n * @param setRightButtonActive: callback to activate the button\n */\n\nexport default class InlineMenu extends Component<Props> {\n    props: Props;\n\n    render() {\n        return (\n            <div className={styles.headerParameters}>\n                <button onClick={this.props.setLeftButtonActive} className={[styles.leftButton, (this.props.leftButtonActive) ? styles.active : ''].join(' ')}>{this.props.leftButtonText}</button>\n                <button onClick={this.props.setRightButtonActive} className={[styles.rightButton, (this.props.rightButtonActive) ? styles.active : ''].join(' ')}>{this.props.rightButtonText}</button>\n            </div>\n        );\n    }\n}\n","// @flow\nimport React, { Component } from \"react\";\nimport styles from \"./style.module.css\";\nimport * as math from \"mathjs\";\n\ntype Props = {};\n\n/**\n * @param matrix: matrix to display\n * @param updateMatrixElement: callback to modify the value of a specific matrix element\n * @param list: list containing all the info about the parameters/variables to display\n * @param parametersModal: boolean used to understand what info tho show or hide\n */\n\nexport default class MatrixDisplayer extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <div className={styles.rowVariable}>\n        {this.props.matrix._data.map((itemRow, indexRow) => {\n          return (\n            <div key={indexRow}>\n              {Array.isArray(itemRow) && (\n                <div className={styles.flexRow}>\n                  {itemRow.map((itemColumn, indexColumn) => {\n                    return (\n                      <div key={indexColumn}>\n                        {indexRow == 0 && this.props.parametersModal && (\n                          <div>\n                            {this.props.list[indexColumn] !== undefined && (\n                              <p>{this.props.list[indexColumn].name}</p>\n                            )}\n                            {this.props.list[indexColumn] == undefined && (\n                              <p>Boundaries</p>\n                            )}\n                          </div>\n                        )}\n                        {indexRow == 0 && !this.props.parametersModal && (\n                          <p>{this.props.list[indexColumn].name}</p>\n                        )}\n                        <input\n                          key={indexColumn}\n                          onChange={e =>\n                            this.props.updateMatrixElement(\n                              e,\n                              indexRow,\n                              indexColumn,\n                              indexColumn == itemRow.length - 1,\n                              this.props.parametersModal\n                            )\n                          }\n                          value={\n                            indexColumn != itemRow.length - 1 ||\n                            indexRow >= this.props.list.length * 2 ||\n                            !this.props.parametersModal\n                              ? itemColumn\n                              : indexRow % 2 == 0\n                              ? this.props.list[math.floor(indexRow / 2)]\n                                  .lowerBound\n                              : this.props.list[math.floor(indexRow / 2)]\n                                  .upperBound\n                          }\n                          disabled={\n                            indexColumn != itemRow.length - 1 &&\n                            indexRow < this.props.list.length * 2 &&\n                            this.props.parametersModal\n                              ? true\n                              : false\n                          }\n                          className={styles.matrixElement}\n                          type=\"number\"\n                          pattern=\"[0-9]+([\\.,][0-9]+)?\"\n                          step=\"0.0001\"\n                          name=\"matrixElement\"\n                          id={indexColumn}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n              {!Array.isArray(itemRow) && <p>No parameters inserted</p>}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport styles from \"./style.module.css\";\n\ntype Props = {};\n\nexport default class LogicRow extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <div className={styles.rowVariable}>\n        <input\n          className={styles.textInput}\n          value={this.props.value}\n          type=\"text\"\n          id={\"Logic\" + this.props.index}\n          onChange={e => {\n            console.log(\"change\");\n            this.props.updateLogicFormulaCallback(this.props.index, e);\n          }}\n          onSelect={e => {\n            console.log(\"select\");\n            this.props.setCursorPositionForLogicFormula(this.props.index, e);\n          }}\n        />\n\n        <MdClose\n          size={20}\n          className={styles.icon}\n          id={this.props.index}\n          onClick={() => {\n            this.props.deleteLogicFormulaCallback(this.props.index);\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport style from \"./style.module.css\";\n\ntype Props = {};\n\nexport default class LogicButtons extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <Fragment>\n        <button\n          id=\"AND\"\n          title=\"Logical AND\"\n          className={style.button_style}\n          onClick={() => {\n            this.props.injectTextInLogicFormula(\"∧\");\n          }}\n        >\n          <p className={style.button_text}>&#x2227;</p>\n        </button>\n\n        <button\n          id=\"OR\"\n          title=\"Logical OR\"\n          className={style.button_style}\n          onClick={() => {\n            this.props.injectTextInLogicFormula(\"∨\");\n          }}\n        >\n          <p className={style.button_text}>&#x2228;</p>\n        </button>\n\n        <button\n          id=\"NOT\"\n          title=\"Logical NOT\"\n          className={style.button_style}\n          onClick={() => {\n            this.props.injectTextInLogicFormula(\"¬\");\n          }}\n        >\n          <p className={style.button_text}>&#xac;</p>\n        </button>\n\n        <button\n          className={style.button_style}\n          id=\"Globally\"\n          title=\"Globally/Always\"\n          onClick={() => {\n            this.props.injectTextInLogicFormula(\"G_[a,b]()\");\n          }}\n        >\n          <p className={style.button_text}>\n            G<sub>&#x5b; a,b &#x5d;</sub>f\n          </p>\n        </button>\n\n        <button\n          id=\"Finally\"\n          title=\"Finally/Eventualy\"\n          className={style.button_style}\n          onClick={() => {\n            this.props.injectTextInLogicFormula(\"F_[a,b]()\");\n          }}\n        >\n          <p className={style.button_text}>\n            F<sub>&#x5b; a,b &#x5d;</sub>f\n          </p>\n        </button>\n\n        <button\n          id=\"Until\"\n          title=\"Until\"\n          className={style.button_style}\n          onClick={() => {\n            this.props.injectTextInLogicFormula(\"()_U_[a,b]()\");\n          }}\n        >\n          <p className={style.button_text}>\n            f<sub>1</sub> U <sub>&#x5b; a,b &#x5d;</sub>f<sub>2</sub>\n          </p>\n        </button>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LogicRow from \"../LogicRow/index\";\nimport LogicButtons from \"../LogicButtons/index\";\nimport styles from \"./style.module.css\";\n\ntype Props = {};\n\nexport default class LogicDisplayer extends Component<Props> {\n  props: Props;\n\n  render() {\n    return (\n      <div className={styles.grid_container}>\n        <div className={styles.grid_item}>\n          <div className={styles.titleBox}>FORMULA DECLARATION</div>\n\n          <div className={styles.grid_container2}>\n            <div className={styles.grid_item2}>\n              <div className={styles.listBox}>\n                {/*generate lines and print the formulas*/}\n                {this.props.logicFormulas.map((item, index) => {\n                  return (\n                    <div key={index}>\n                      <LogicRow\n                        index={index}\n                        updateLogicFormulaCallback={\n                          this.props.updateLogicFormulaCallback\n                        }\n                        deleteLogicFormulaCallback={\n                          this.props.deleteLogicFormulaCallback\n                        }\n                        setCursorPositionForLogicFormula={\n                          this.props.setCursorPositionForLogicFormula\n                        }\n                        value={item}\n                      />\n                      <hr className={styles.separator} />\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div className={styles.grid_item2}>\n              <div className={styles.buttonsList}>\n                <LogicButtons\n                  injectTextInLogicFormula={this.props.injectTextInLogicFormula}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.buttonBox}>\n            <button\n              className={styles.button}\n              onClick={this.props.addLogicFormulaCallback}\n            >\n              <p>ADD FORMULA</p>\n            </button>\n          </div>\n          <p className={styles.textNote}>suports only &gt;&#61; and &lt;</p>\n          <p className={styles.textNote}>\n            doesn't support ¬ Until nor number with E\n          </p>\n          <p className={styles.textNote}>numbers with max 6 decimals</p>\n        </div>\n        {/*end grid item*/}\n\n        {/*display variables*/}\n        <div className={styles.grid_item}>\n          <div className={styles.titleBox}>VARIABLES</div>\n          {this.props.variables.map((item, index) => {\n            if (item.lMatrixExtra === false) {\n              // hide the variables added for lMatrixExtra\n              return (\n                <p key={index} className={styles.text}>\n                  {item.name}\n                </p>\n              );\n            }\n          })}\n        </div>\n        {/*end grid item for variables */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport RoundedButton from \"../RoundedButton/index\";\nimport styles from \"./style.module.css\";\n\ntype Props = {};\n\nexport default class LogicDisplayer extends Component<Props> {\n  props: Props;\n\n  // build the option for the selects, set the selected value\n  createVariableSelector = () => {\n    if (this.props.arrayOptions === undefined) {\n      // at launch time\n      return \"\";\n    }\n\n    return this.props.arrayOptions.map((item, index) => {\n      return (\n        <option key={index} value={item}>\n          {item}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.grid_container}>\n        <div className={styles.grid_item}>\n          <form>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"choiceForDrawing\"\n                value=\"none\"\n                checked={this.props.printSettings.drawingSw === \"none\"}\n                onChange={this.props.updatePrintSwSettings}\n              />\n              None\n            </label>\n\n            <label>\n              <input\n                type=\"radio\"\n                name=\"choiceForDrawing\"\n                value=\"matlab\"\n                checked={this.props.printSettings.drawingSw === \"matlab\"}\n                onChange={this.props.updatePrintSwSettings}\n              />\n              Matlab\n            </label>\n\n            <label>\n              <input\n                type=\"radio\"\n                name=\"choiceForDrawing\"\n                value=\"octave\"\n                checked={this.props.printSettings.drawingSw === \"octave\"}\n                onChange={this.props.updatePrintSwSettings}\n              />\n              Octave\n            </label>\n          </form>\n\n          <div className={styles.listBox}>\n            {/*array of 3 select for char printing*/}\n            {this.props.printSettings.charts.map((item, index) => {\n              // item is an object\n              return (\n                <React.Fragment key={index}>\n                  <div className={styles.rowContainer}>\n                    <select\n                      name=\"x_axis\"\n                      className={styles.select_style}\n                      value={item.x_axis}\n                      id={index}\n                      key={\"x\" + index} // needed by React\n                      onChange={this.props.updatePrintChart}\n                    >\n                      <option value=\"\" disabled></option>\n                      {this.createVariableSelector()}\n                    </select>\n\n                    <select\n                      name=\"y_axis\"\n                      className={styles.select_style}\n                      value={item.y_axis}\n                      id={index}\n                      key={\"y\" + index} // needed by React\n                      onChange={this.props.updatePrintChart}\n                    >\n                      <option value=\"\" disabled></option>\n                      {this.createVariableSelector()}\n                    </select>\n\n                    <select\n                      name=\"z_axis\"\n                      className={styles.select_style}\n                      value={item.z_axis}\n                      id={index}\n                      key={\"z\" + index} // needed by React\n                      onChange={this.props.updatePrintChart}\n                    >\n                      <option value=\"\" /* not disabled*/></option>\n                      {this.createVariableSelector()}\n                    </select>\n\n                    <MdClose\n                      size={20}\n                      className={styles.icon}\n                      key={index}\n                      onClick={index => {\n                        this.props.deletePrintChart(index);\n                      }}\n                    />\n                  </div>\n                  <hr className={styles.separator} />\n                </React.Fragment>\n              );\n            })}\n            {/*end of map()*/}\n          </div>\n\n          <div className={styles.buttonBox}>\n            <RoundedButton\n              text={\"ADD CHART\"}\n              parameter={false}\n              callback={this.props.addPrintChart}\n            />\n          </div>\n\n          <p className={styles.textNote}>don't mix parameters with variables</p>\n        </div>\n      </div>\n    ); // end return\n  }\n}\n","// @flow\nimport React, { Component } from \"react\";\nimport styles from \"./style.module.css\";\nimport modalStyles from \"./modalStyle.module.css\";\nimport RoundedButton from \"../RoundedButton/index\";\nimport DropdownMenu from \"../DropdownMenu/index\";\nimport VariableRow from \"../VariableRow/index\";\nimport EquationRow from \"../EquationRow/index\";\nimport InlineMenu from \"../InlineMenu/index\";\nimport MatrixDisplayer from \"../MatrixDisplayer/index\";\nimport LogicDisplayer from \"../LogicDisplayer/index\";\nimport PrintSettings from \"../PrintSettings/index\";\nimport Popover, { ArrowContainer } from \"react-tiny-popover\";\nimport { black } from \"ansi-colors\";\nimport { MdMenu } from \"react-icons/md\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\ntype Props = {};\n\nexport default class BoxesPage extends Component<Props> {\n  props: Props;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPopoverOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.container} data-tid=\"container\">\n        <div>\n          <div className={styles.header}>\n            <div className={styles.marginLeft}>\n              {/*menu of selection*/}\n              <DropdownMenu\n                handleMethodSelection={this.props.handleMethodSelection}\n                nameSelectedMenu={this.props.nameSelectedMenu}\n              />\n\n              {/*selector for iteration of the system*/}\n              <div className={styles.simplePaddingLeft}>\n                Number of iterations:{\" \"}\n                <input\n                  onChange={this.props.changeNumberOfIterations}\n                  value={this.props.numberOfIterations}\n                  className={styles.textInput}\n                  type=\"number\"\n                  name=\"numberIterations\"\n                  min=\"1\"\n                  step=\"1\"\n                />\n              </div>\n            </div>\n\n            <div className={styles.flexEnd}>\n              {/* The menu on the top right for load and save*/}\n              <Popover\n                isOpen={this.state.isPopoverOpen}\n                position={\"bottom\"}\n                padding={0}\n                onClickOutside={() => this.setState({ isPopoverOpen: false })} // close popover\n                containerClassName={styles.menuContainer}\n                content={(\n                  { position, nudgedLeft, nudgedTop, targetRect, popoverRect } // you can also provide a render function that injects some useful stuff!\n                ) => (\n                  <div style={{ padding: 10 }}>\n                    <p\n                      className={styles.menuElement}\n                    >\n                      <label\n                        className={styles.menuElement}\n                        for={styles.file}\n                      >\n                        Load configuration from file\n                      </label>\n                    </p>\n                    <input id={styles.file} type=\"file\" onChange={() => {\n                        this.props.loadConfiguration(styles.file);\n                        this.setState({ isPopoverOpen: false})}}/>\n                    <p\n                      className={styles.menuElement}\n                      onClick={() => {\n                          this.props.saveConfiguration();\n                          this.setState({ isPopoverOpen: false})}\n                        }\n                    >\n                      Save current configuration\n                    </p>\n                    <p\n                      className={styles.menuElement}\n                      onClick={() => {\n                          this.props.exportSourceFile();\n                          this.setState({ isPopoverOpen: false})}\n                        }\n                    >\n                      Export source files\n                    </p>\n                    <p\n                      className={styles.menuElement}\n                      onClick={() => {\n                          this.props.chooseMethod();\n                          this.setState({ isPopoverOpen: false})}\n                        }\n                    >\n                      Choose method\n                    </p>\n                    <p\n                      className={styles.menuElement}\n                      onClick={() => {\n                        document.getElementById(\n                          \"printSettingsModal\"\n                        ).style.display = \"block\";\n                      }}\n                    >\n                      Print settings\n                    </p>\n                  </div>\n                )}\n              >\n                {/* end of the opening popover tag */}\n                <MdMenu\n                  className={styles.icon}\n                  size={30}\n                  onClick={() => this.setState({ isPopoverOpen: true })}\n                />\n              </Popover>\n            </div>\n            {/* end of menu on the top right */}\n          </div>\n          {/* end of the header*/}\n\n          {this.props.nameSelectedMenu === \"Method of analysis\" && (\n            <div className={styles.selectMethodContainer}>\n              <p>Select a method of analysis from the header menu</p>\n            </div>\n          )}\n\n          {this.props.nameSelectedMenu !== \"Method of analysis\" && (\n            <div className={styles.mainContainer}>\n              <div className={styles.main}>\n                <div className={styles.grid_container}>\n                  <div className={styles.grid_item}>\n                    <div className={styles.titleBox}>VARIABLE DECLARATIONS</div>\n\n                    <div className={styles.listBox}>\n                      {this.props.variables.map((item, index) => {\n                        return (\n                          <div key={index}>\n                            <VariableRow\n                              index={index}\n                              name={item.name}\n                              lowerBound={item.lowerBound}\n                              upperBound={item.upperBound}\n                              lMatrixExtra={item.lMatrixExtra}\n                              polytopes={false}\n                              parameter={false}\n                              changeName={this.props.changeName}\n                              changeLowerBound={this.props.changeLowerBound}\n                              changeUpperBound={this.props.changeUpperBound}\n                              deleteCallback={this.props.deleteCallback}\n                              boxesMethod={this.props.boxesMethod}\n                              polytopesMethod={this.props.polytopesMethod}\n                              parallelotopesMethod={\n                                this.props.parallelotopesMethod\n                              }\n                            />\n                            {!item.lMatrixExtra && (\n                              <hr className={styles.separator} />\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n\n                    <div className={styles.buttonBox}>\n                      <RoundedButton\n                        text={\"ADD VARIABLE\"}\n                        parameter={false}\n                        callback={this.props.addCallback}\n                        notClickable={this.props.disabledAddVariable}\n                      />\n                    </div>\n                  </div>\n\n                  <div className={styles.grid_item}>\n                    <div className={styles.titleBox}>\n                      PARAMETER DECLARATIONS\n                    </div>\n                    {/*inline menu selector of the type of parameters*/}\n                    <InlineMenu\n                      leftButtonText={\"BOXES\"}\n                      rightButtonText={\"POLYTOPES\"}\n                      leftButtonActive={this.props.leftButtonActive}\n                      rightButtonActive={this.props.rightButtonActive}\n                      setLeftButtonActive={this.props.setLeftButtonActive}\n                      setRightButtonActive={this.props.setRightButtonActive}\n                    />\n                    {/*printing the parametes of the system*/}\n                    <div className={styles.listBox}>\n                      {this.props.parameters.map((item, index) => {\n                        return (\n                          <div key={index}>\n                            <VariableRow\n                              index={index}\n                              name={item.name}\n                              polytopes={this.props.rightButtonActive}\n                              parameter={true}\n                              lowerBound={item.lowerBound}\n                              upperBound={item.upperBound}\n                              changeName={this.props.changeName}\n                              changeLowerBound={this.props.changeLowerBound}\n                              changeUpperBound={this.props.changeUpperBound}\n                              deleteCallback={this.props.deleteCallback}\n                              boxesMethod={this.props.boxesMethod}\n                              polytopesMethod={this.props.polytopesMethod}\n                              parallelotopesMethod={\n                                this.props.parallelotopesMethod\n                              }\n                            />\n                            <hr className={styles.separator} />\n                          </div>\n                        );\n                      })}\n                    </div>\n\n                    <div className={styles.buttonBox}>\n                      <RoundedButton\n                        text={\"ADD PARAMETER\"}\n                        parameter={true}\n                        callback={this.props.addCallback}\n                        notClickable={this.props.disabledAddParameter}\n                      />\n                      {this.props.rightButtonActive && (\n                        <RoundedButton\n                          text={\"SHOW MATRIX\"}\n                          parameter={true}\n                          callback={() => {\n                            document.getElementById(\n                              \"parameterMatrixModal\"\n                            ).style.display = \"block\";\n                          }}\n                        />\n                      )}\n                    </div>\n                  </div>\n                  {/*printing the equations of the system*/}\n                  <div className={styles.grid_item}>\n                    <div className={styles.titleBox}>SYSTEM OF EQUATIONS</div>\n                    <div className={styles.listBox}>\n                      {this.props.equations.map((item, index) => {\n                        return (\n                          <EquationRow\n                            key={index}\n                            index={index}\n                            variableName={item.variableName}\n                            equation={item.equation}\n                            updateEquation={this.props.updateEquation}\n                          />\n                        );\n                      })}\n                    </div>\n                  </div>\n\n                  {!this.props.boxesMethod && (\n                    <div className={styles.grid_item}>\n                      <div className={styles.titleBox}>\n                        MODIFY APPROXIMATION METHOD MATRIX\n                      </div>\n                      <div className={styles.center}>\n                        <RoundedButton\n                          text={\"MODIFY L MATRIX\"}\n                          parameter={false}\n                          notClickable={false}\n                          callback={() => {\n                            document.getElementById(\n                              \"lMatrixModal\"\n                            ).style.display = \"block\";\n                          }}\n                        />\n                        {this.props.polytopesMethod && (\n                          <RoundedButton\n                            text={\"MODIFY T MATRIX\"}\n                            parameter={false}\n                            notClickable={false}\n                            callback={() => {\n                              document.getElementById(\n                                \"TMatrixModal\"\n                              ).style.display = \"block\";\n                            }}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/*footer with buttons*/}\n              <div className={styles.footer}>\n                {/*conditional button*/}\n                {this.props.synthesis && (\n                  <button\n                    className={styles.logicButton}\n                    onClick={() => {\n                      document.getElementById(\"logicModal\").style.display =\n                        \"block\";\n                    }}\n                  >\n                    <p>TEMPORAL LOGIC</p>\n                  </button>\n                )}\n\n                <button\n                  onClick={this.props.startExecuting}\n                  disabled={this.props.executing}\n                  className={styles.startButton}\n                >\n                  {!this.props.executing && <p>EXECUTE</p>}\n                  {this.props.executing && (\n                    <PulseLoader\n                      sizeUnit={\"px\"}\n                      size={5}\n                      color={\"#fff\"}\n                      loading={this.props.executing}\n                    />\n                  )}\n                </button>\n\n                <button\n                  onClick={this.props.stopExecuting}\n                  className={styles.stopButton}\n                >\n                  <p>STOP</p>\n                </button>\n              </div>\n              {/*end footer*/}\n            </div>\n          )}\n        </div>\n\n        {/*modal for showing the parameters matrix*/}\n        <div id=\"parameterMatrixModal\" className={modalStyles.modal}>\n          <div className={modalStyles.modal_content}>\n            <div className={modalStyles.modal_header}>\n              <span\n                onClick={() => {\n                  document.getElementById(\n                    \"parameterMatrixModal\"\n                  ).style.display = \"none\";\n                }}\n                className={modalStyles.close}\n              >\n                &times; {/*X in HTML*/}\n              </span>\n              <div className={modalStyles.flexRow}>\n                <h2>PARAMETER MATRIX</h2>\n              </div>\n            </div>\n            <div className={modalStyles.modal_body}>\n              <MatrixDisplayer\n                updateMatrixElement={this.props.updateMatrixElement}\n                matrix={this.props.parametersMatrix}\n                list={this.props.parameters}\n                parametersModal={true}\n              />\n              {this.props.parameters.length != 0 && (\n                <div>\n                  <div className={styles.footer}>\n                    <RoundedButton\n                      text={\"ADD ROW TO MATRIX\"}\n                      parameter={false}\n                      callback={this.props.addRowParameterMatrix}\n                      notClickable={false}\n                    />\n                    <RoundedButton\n                      text={\"REMOVE LAST ROW FROM MATRIX\"}\n                      parameter={false}\n                      callback={this.props.deleteRowParameterMatrix}\n                      notClickable={false}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/*end of the modal matrix*/}\n\n        {/*modal for showing the L matrix*/}\n        <div id=\"lMatrixModal\" className={modalStyles.modal}>\n          <div className={modalStyles.modal_content}>\n            <div className={modalStyles.modal_header}>\n              <span\n                onClick={() => {\n                  document.getElementById(\"lMatrixModal\").style.display =\n                    \"none\";\n                }}\n                className={modalStyles.close}\n              >\n                &times; {/*X in HTML*/}\n              </span>\n              <div className={modalStyles.flexRow}>\n                <h2>L MATRIX</h2>\n              </div>\n            </div>\n            <div className={modalStyles.modal_body}>\n              {this.props.variables.length == 0 && <p>No variables inserted</p>}\n              {this.props.variables.length > 0 && (\n                <div className={styles.flexRow}>\n                  <MatrixDisplayer\n                    updateMatrixElement={this.props.updateMatrixElement}\n                    matrix={this.props.lMatrix}\n                    list={this.props.variables}\n                    parametersModal={false}\n                  />\n                  {(this.props.polytopesMethod ||\n                    this.props.parallelotopesMethod) && (\n                    <div>\n                      <p>Domain declaration</p>\n                      {this.props.variables.map((item, index) => {\n                        return (\n                          <div key={index} className={styles.flexRowDomain}>\n                            <input\n                              className={styles.textInput}\n                              value={item.lowerBound}\n                              onChange={e =>\n                                this.props.changeLowerBound(e, false)\n                              }\n                              type=\"number\"\n                              id={index}\n                              pattern=\"[0-9]+([\\.,][0-9]+)?\"\n                              step=\"0.0001\"\n                            />\n                            <p> - </p>\n                            <input\n                              className={styles.textInput}\n                              value={item.upperBound}\n                              onChange={e =>\n                                this.props.changeUpperBound(e, false)\n                              }\n                              type=\"number\"\n                              id={index}\n                              pattern=\"[0-9]+([\\.,][0-9]+)?\"\n                              step=\"0.0001\"\n                            />\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {this.props.variables.length != 0 && this.props.polytopesMethod && (\n                <div>\n                  <div className={styles.footer}>\n                    <RoundedButton\n                      text={\"ADD ROW TO MATRIX\"}\n                      parameter={false}\n                      callback={this.props.addRowLMatrix}\n                      notClickable={false}\n                    />\n                    <RoundedButton\n                      text={\"REMOVE LAST ROW FROM MATRIX\"}\n                      parameter={false}\n                      callback={this.props.deleteRowLMatrix}\n                      notClickable={false}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/*end of the modal L matrix*/}\n\n        {/*start of the modal T matrix*/}\n        <div id=\"TMatrixModal\" className={modalStyles.modal}>\n          <div className={modalStyles.modal_content}>\n            <div className={modalStyles.modal_header}>\n              <span\n                onClick={() => {\n                  document.getElementById(\"TMatrixModal\").style.display =\n                    \"none\";\n                }}\n                className={modalStyles.close}\n              >\n                &times; {/*X in HTML*/}\n              </span>\n              <div className={modalStyles.flexRow}>\n                <h2>T MATRIX</h2>\n              </div>\n            </div>\n            <div className={modalStyles.modal_body}>\n              <MatrixDisplayer\n                updateMatrixElement={this.props.updateTMatrixElement}\n                matrix={this.props.tMatrix}\n                list={this.props.variables}\n                parametersModal={false}\n              />\n              {this.props.variables.length != 0 && (\n                <div>\n                  <div className={styles.footer}>\n                    <RoundedButton\n                      text={\"ADD ROW TO MATRIX\"}\n                      parameter={false}\n                      callback={this.props.addRowTMatrix}\n                      notClickable={false}\n                    />\n                    <RoundedButton\n                      text={\"REMOVE LAST ROW FROM MATRIX\"}\n                      parameter={false}\n                      callback={this.props.deleteRowTMatrix}\n                      notClickable={false}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/*end of the modal T matrix*/}\n\n        {/*modal for showing the logic formulas*/}\n        <div id=\"logicModal\" className={modalStyles.modal}>\n          <div className={modalStyles.modal_content}>\n            <div className={modalStyles.modal_header}>\n              <span\n                onClick={() => {\n                  document.getElementById(\"logicModal\").style.display = \"none\";\n                }}\n                className={modalStyles.close}\n              >\n                &times; {/*X in HTML*/}\n              </span>\n              <div className={modalStyles.flexRow}>\n                <h2>LOGICS</h2>\n              </div>\n            </div>\n\n            <div className={modalStyles.modal_body}>\n              <LogicDisplayer\n                logicFormulas={this.props.logicFormulas}\n                addLogicFormulaCallback={this.props.addLogicFormulaCallback}\n                updateLogicFormulaCallback={\n                  this.props.updateLogicFormulaCallback\n                }\n                deleteLogicFormulaCallback={\n                  this.props.deleteLogicFormulaCallback\n                }\n                setCursorPositionForLogicFormula={\n                  this.props.setCursorPositionForLogicFormula\n                }\n                injectTextInLogicFormula={this.props.injectTextInLogicFormula}\n                variables={this.props.variables}\n              />\n            </div>\n          </div>\n        </div>\n        {/*end of the modal for the logic*/}\n\n        {/*modal for showing the print settings*/}\n        <div id=\"printSettingsModal\" className={modalStyles.modal}>\n          <div className={modalStyles.modal_content}>\n            <div className={modalStyles.modal_header}>\n              <span\n                onClick={() => {\n                  document.getElementById(\"printSettingsModal\").style.display =\n                    \"none\";\n                }}\n                className={modalStyles.close}\n              >\n                &times; {/*X in HTML*/}\n              </span>\n\n              <div className={modalStyles.flexRow}>\n                <h2>PRINT SETTINGS</h2>\n              </div>\n            </div>\n\n            <div className={modalStyles.modal_body}>\n              <PrintSettings\n                printSettings={this.props.printSettings}\n                updatePrintSwSettings={this.props.updatePrintSwSettings}\n                addPrintChart={this.props.addPrintChart}\n                deletePrintChart={this.props.deletePrintChart}\n                updatePrintChart={this.props.updatePrintChart}\n                variables={this.props.variables}\n                arrayOptions={this.props.arrayOptions}\n              />\n            </div>\n          </div>\n        </div>\n        {/*end of the modal for the print settings*/}\n      </div>\n    );\n  }\n}\n","export const colors = {\n  red: \"#C62828\",\n  green: \"#558B2F\",\n  orange: \"#FF8F00\"\n};\n\nexport const deepCopy = value => {\n  return JSON.parse(JSON.stringify(value));\n};\n\nexport const capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nexport const downloadFile = (data, name, type) => {\n  var bb = new Blob([data], { type: type });\n  var a = document.createElement('a');\n  a.download = name;\n  a.href = window.URL.createObjectURL(bb);\n  a.click();\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_text\":\"style_button_text__1Gle2\",\"button_style\":\"style_button_style__b0oAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_container\":\"style_grid_container__XEuCu\",\"grid_item\":\"style_grid_item__36Fr6\",\"select_style\":\"style_select_style__2hXus\",\"rowContainer\":\"style_rowContainer__30XuX\",\"rowVariable\":\"style_rowVariable__3tbcs\",\"listBox\":\"style_listBox__4YgU0\",\"icon\":\"style_icon__nMhRV\",\"footer\":\"style_footer__3eWac\",\"buttonBox\":\"style_buttonBox__2RPoy\",\"button\":\"style_button__1OQ-1\",\"separator\":\"style_separator__2Qs9p\",\"textNote\":\"style_textNote__h55vF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3-5So\",\"separator\":\"style_separator__2Av-v\",\"header\":\"style_header__3Mdaj\",\"titleBox\":\"style_titleBox__zOmLZ\",\"buttonBox\":\"style_buttonBox__2tkaY\",\"listBox\":\"style_listBox__2Kw79\",\"marginLeft\":\"style_marginLeft__34nPm\",\"simplePaddingLeft\":\"style_simplePaddingLeft__2TvjT\",\"flexEnd\":\"style_flexEnd__1kBrt\",\"textInput\":\"style_textInput__p3xab\",\"grid_container\":\"style_grid_container__2FxYf\",\"grid_item\":\"style_grid_item__Y9qB1\",\"main\":\"style_main__1Yiea\",\"footer\":\"style_footer__3iWKX\",\"logicButton\":\"style_logicButton__1QJM7\",\"startButton\":\"style_startButton__TZczq\",\"stopButton\":\"style_stopButton__3xQhL\",\"menuContainer\":\"style_menuContainer__1WT9c\",\"icon\":\"style_icon__3HQ5p\",\"menuElement\":\"style_menuElement__2K_eD\",\"center\":\"style_center__2MCS5\",\"selectMethodContainer\":\"style_selectMethodContainer__oetid\",\"mainContainer\":\"style_mainContainer__2IHQO\",\"flexRow\":\"style_flexRow__3jgOm\",\"flexRowDomain\":\"style_flexRowDomain__2e9ZO\",\"file\":\"style_file__21I0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowVariable\":\"style_rowVariable__2U5ic\",\"rowContainer\":\"style_rowContainer__fRVwg\",\"textInput\":\"style_textInput__1MtlP\",\"icon\":\"style_icon__2HzDd\"};","// @flow\nimport type { GetState, Dispatch } from '../reducers/types';\n\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\n\nexport function increment() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n}\n\nexport function incrementIfOdd() {\n  return (dispatch: Dispatch, getState: GetState) => {\n    const { counter } = getState();\n\n    if (counter % 2 === 0) {\n      return;\n    }\n\n    dispatch(increment());\n  };\n}\n\nexport function incrementAsync(delay: number = 1000) {\n  return (dispatch: Dispatch) => {\n    setTimeout(() => {\n      dispatch(increment());\n    }, delay);\n  };\n}\n","// @flow\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER } from '../actions/counter';\nimport type { Action } from './types';\n\nexport default function counter(state: number = 0, action: Action) {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return state + 1;\n    case DECREMENT_COUNTER:\n      return state - 1;\n    default:\n      return state;\n  }\n}\n","// @flow\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport counter from './counter';\n\nexport default function createRootReducer(history: History) {\n  return combineReducers({\n    router: connectRouter(history),\n    counter\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware, routerActions } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from '../reducers';\nimport * as counterActions from '../actions/counter';\nimport type { counterStateType } from '../reducers/types';\n\nconst history = createHashHistory();\n\nconst rootReducer = createRootReducer(history);\n\nconst configureStore = (initialState?: counterStateType) => {\n  // Redux Configuration\n  const middleware = [];\n  const enhancers = [];\n\n  // Thunk Middleware\n  middleware.push(thunk);\n\n  // Logging Middleware\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true\n  });\n\n  // Skip redux logs in console during the tests\n  if (process.env.NODE_ENV !== 'test') {\n    middleware.push(logger);\n  }\n\n  // Router Middleware\n  const router = routerMiddleware(history);\n  middleware.push(router);\n\n  // Redux DevTools Configuration\n  const actionCreators = {\n    ...counterActions,\n    ...routerActions\n  };\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Options: http://extension.remotedev.io/docs/API/Arguments.html\n        actionCreators\n      })\n    : compose;\n  /* eslint-enable no-underscore-dangle */\n\n  // Apply Middleware & Compose Enhancers\n  enhancers.push(applyMiddleware(...middleware));\n  const enhancer = composeEnhancers(...enhancers);\n\n  // Create Store\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept(\n      '../reducers',\n      // eslint-disable-next-line global-require\n      () => store.replaceReducer(require('../reducers').default)\n    );\n  }\n\n  return store;\n};\n\nexport default { configureStore, history };\n","// @flow\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from '../reducers';\nimport type { counterStateType } from '../reducers/types';\n\nconst history = createHashHistory();\nconst rootReducer = createRootReducer(history);\nconst router = routerMiddleware(history);\nconst enhancer = applyMiddleware(thunk, router);\n\nfunction configureStore(initialState?: counterStateType) {\n  return createStore(rootReducer, initialState, enhancer);\n}\n\nexport default { configureStore, history };\n","// @flow\nimport configureStoreDev from './configureStore.dev';\nimport configureStoreProd from './configureStore.prod';\n\nconst selectedConfigureStore =\n  process.env.NODE_ENV === 'production'\n    ? configureStoreProd\n    : configureStoreDev;\n\nexport const { configureStore } = selectedConfigureStore;\n\nexport const { history } = selectedConfigureStore;\n","import { AppContainer } from \"react-hot-loader\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { configureStore, history } from \"./store/configureStore\";\nimport Home from \"./containers/Home\";\n\nconst store = configureStore();\n\nrender(\n  <AppContainer>\n    <Home store={store} history={history} />\n  </AppContainer>,\n  document.getElementById(\"root\")\n); // basic way of using store\n\nif (module.hot) {\n  module.hot.accept(\"./containers/Home\", () => {\n    // eslint-disable-next-line global-require\n    const NextRoot = require(\"./containers/Home\").default;\n    render(\n      <AppContainer>\n        <NextRoot store={store} history={history} />\n      </AppContainer>,\n      document.getElementById(\"root\")\n    );\n  });\n}\n"],"sourceRoot":""}